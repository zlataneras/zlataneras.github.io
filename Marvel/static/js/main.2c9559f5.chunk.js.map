{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","components/service/MarvelService.js","hooks/http.hook.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/charSearch/CharSearch.js","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/pages/Page404.js","components/singleCharPage/SingleCharPage.js","components/pages/SingleItemPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","end","style","isActive","useMarvelService","_apiKey","_offsetBase","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","json","data","message","clearError","useHttp","getAllCharacters","a","offset","allChars","results","map","item","_transformState","getCharracterId","id","getComicId","_transformComicsChar","getAllComics","allComics","getCharByName","name","count","char","image","thumbnail","path","extension","description","homepage","urls","wiki","comics","items","title","price","prices","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","View","imgClass","length","slice","href","RandomChar","setChar","setImgClass","useEffect","randomizer","updateState","Math","floor","random","then","spinner","errorM","view","onClick","mjolnir","CharList","UpdateStateOfApp","chars","setChars","setOffset","newCharsLoading","setNewCharsLoading","ended","setEnded","pageEnded","setPageEnded","renderChars","setRenderChars","onAddNewChars","window","addEventListener","checkPageEnded","onUpdateCharListByScroll","removeEventListener","scrollY","document","documentElement","clientHeight","offsetHeight","initial","UpdateStateAllChars","newChars","endeds","itemRefs","setRef","ref","push","focusOnItem","forEach","classList","remove","add","focus","charsList","i","tabIndex","e","onKeyDown","key","renderItems","load","erroR","some","Skeleton","showComics","CharInfo","charId","onCharLoaded","skeleton","ErrorBoundary","state","info","console","log","this","setState","props","children","Component","CharSearch","setData","updated","setUpdated","onCharExist","initialValues","validationSchema","Yup","onSubmit","JSON","parse","stringify","placeholder","component","MainPage","UpdateState","Helmet","content","decoration","AppBanner","avengers","avengersLogo","ComicsList","onComicsUpdate","onUpdateState","ComicsPage","Page404","ViewChar","ViewComic","SingleCharPage","param","Name","useParams","comicId","onCharUpdate","viewChar","viewComic","SingleItemPage","App","element","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2c9559f5.chunk.js","sourcesContent":["import './appHeader.scss';\nimport { Link, NavLink } from 'react-router-dom';\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to='/'>\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                    end \n                    style={({isActive})=>({'color': isActive ? '#9F0013' : 'inherit'})}\n                    to='/'>Characters</NavLink></li>\n                    /\n                    <li><NavLink \n                     \n                    style={({isActive})=>({'color': isActive ? '#9F0013' : 'inherit'})}\n                    to='/comics'>Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useHttp } from \"../../hooks/http.hook\";\r\n\r\nconst  useMarvelService=()=> {\r\n\r\n    const _apiKey = \"apikey=daef7f036f5ac9fd9444b3722313b6f2\";\r\n    const _offsetBase = 210;\r\n\r\n    const {loading,error,request,clearError} = useHttp();\r\n\r\n\r\n   \r\n\r\n    const getAllCharacters = async (offset = _offsetBase) => {\r\n      const allChars = await request(\r\n        `https://gateway.marvel.com:443/v1/public/characters?limit=9&offset=${offset}&${_apiKey}`\r\n      );\r\n  \r\n      return allChars.data.results.map((item) => {\r\n        return _transformState(item);\r\n      });\r\n    };\r\n  \r\n    const getCharracterId = async (id) => {\r\n      const data = await request(\r\n        `https://gateway.marvel.com:443/v1/public/characters/${id}?${_apiKey}`\r\n      );\r\n      return _transformState(data.data.results[0]);\r\n    };\r\n\r\n    const getComicId = async (id) => {\r\n      const data = await request(\r\n\r\n        `https://gateway.marvel.com:443/v1/public/comics/${id}?${_apiKey}`\r\n      );\r\n      return _transformComicsChar(data.data.results[0]);\r\n    };\r\n\r\n\r\n    const getAllComics = async(offset = _offsetBase)=>{\r\n      \r\n      const allComics= await request(\r\n        `https://gateway.marvel.com:443/v1/public/comics?limit=8&offset=${offset}&${_apiKey}`\r\n      )\r\n        \r\n      return allComics.data.results.map((item)=>{\r\n        return _transformComicsChar(item);\r\n      });\r\n    }\r\n\r\n    const getCharByName= async(name)=>{\r\n      const data= await request(`https://gateway.marvel.com:443/v1/public/characters?name=${name}&apikey=daef7f036f5ac9fd9444b3722313b6f2`)\r\n      \r\n      return data.data.count!==0 ? _transformState(data.data.results[0]) : null;\r\n    }\r\n\r\n    const _transformState = (char) => {\r\n      return {\r\n        id: char.id,\r\n        name: char.name,\r\n        image: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n        description: !char.description\r\n          ? \"sorry,no description is available rn\"\r\n          : char.description,\r\n        homepage: char.urls[0].url,\r\n        wiki: char.urls[1].url,\r\n        comics: char.comics.items\r\n      };\r\n    };\r\n\r\n    const _transformComicsChar=(char)=>{\r\n      return {\r\n        id:char.id,\r\n        title:char.title,\r\n        image: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n        price: char.prices[0].price\r\n      }\r\n    }\r\n\r\n\r\n    return { loading,error,getAllCharacters,getCharracterId,clearError,getAllComics,getComicId , getCharByName} ;\r\n}\r\n  \r\n  export default useMarvelService;\r\n  ","\r\nimport {useState,useCallback} from 'react';\r\n\r\nexport const useHttp=()=>{\r\n    const [loading,setLoading]=useState(false);\r\n    const [error,setError]=useState(null);\r\n\r\n    const request = useCallback(async(url,method='GET',body=null,headers={'Content-Type': 'application/json'})=>{\r\n        setLoading(true);\r\n        setError(false);\r\n        try{\r\n            const response=await fetch(url,{method,body,headers});\r\n\r\n            if (!response.ok) {\r\n                setLoading(false);\r\n                setError(true)\r\n\r\n            }\r\n            const data = await response.json();\r\n          \r\n            setLoading(false);\r\n\r\n            return data;\r\n\r\n        }catch(e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            \r\n            throw e;\r\n\r\n        }\r\n\r\n        \r\n    },[])\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, error, request,clearError};\r\n\r\n}","const Spinner = () => {\r\n  return (\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n          <g transform=\"translate(80,50)\">\r\n          <g transform=\"rotate(0)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n          </circle>\r\n          </g>\r\n          </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n          <g transform=\"rotate(45)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n          </circle>\r\n          </g>\r\n          </g><g transform=\"translate(50,80)\">\r\n          <g transform=\"rotate(90)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n          </circle>\r\n          </g>\r\n          </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n          <g transform=\"rotate(135)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n          </circle>\r\n          </g>\r\n          </g><g transform=\"translate(20,50.00000000000001)\">\r\n          <g transform=\"rotate(180)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n          </circle>\r\n          </g>\r\n          </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n          <g transform=\"rotate(225)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n          </circle>\r\n          </g>\r\n          </g><g transform=\"translate(49.99999999999999,20)\">\r\n          <g transform=\"rotate(270)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n          </circle>\r\n          </g>\r\n          </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n          <g transform=\"rotate(315)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n          </circle>\r\n          </g>\r\n          </g>\r\n      </svg>\r\n  )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"250px\",\r\n        objectFit: \"contain\",\r\n        margin: \"0 auto\"\r\n      }}\r\n      src={img}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useState,useEffect } from \"react\";\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport useMarvelService from \"../service/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nconst RandomChar =()=> {\n  const [char,setChar]= useState({});\n  const [imgClass,setImgClass]=useState();\n  \n  const {loading,error,getCharracterId} =useMarvelService();\n\n  useEffect(()=>{\n    randomizer();\n  },[])\n\n  const updateState = (char) => {\n    if (\n      char.image ===\n      \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n    ) {\n      setImgClass('contain');  \n    } else {\n      setImgClass('cover');\n\n    }\n\n    setChar(char);\n  };\n\n\n  const randomizer = () => {\n    let id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharracterId(id)\n      .then(updateState)\n      \n  };\n\n    const spinner = loading ? <Spinner /> : null;\n    const errorM = error ? <ErrorMessage /> : null;\n    const view = !(loading || error) ? (\n      <View char={char} imgClass={imgClass} />\n    ) : null;\n  return (\n    <div className=\"randomchar\">\n      {spinner}\n      {errorM}\n      {view}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button className=\"button button__main\" onClick={randomizer}>\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n  \n}\nconst View = ({ char, imgClass }) => {\n  const { image, name, description, wiki, homepage } = char;\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={image}\n        alt=\"Random character\"\n        className={`randomchar__img randomchar__img_${imgClass}`}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{ description && description.length>210 ? `${description.slice(0,210)}...` : description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import \"./charList.scss\";\nimport { useState,useEffect } from \"react\";\nimport useMarvelService from \"../service/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nconst CharList=({UpdateStateOfApp})=> {\n\n\n  const [chars,setChars]=useState([]);\n  const [offset,setOffset]=useState(1450);\n  const [newCharsLoading,setNewCharsLoading]=useState(false);\n  const [ended,setEnded]=useState(false);\n  const [pageEnded,setPageEnded]=useState(false);\n  const [renderChars,setRenderChars] = useState(false);\n\n  const {loading,error,getAllCharacters} = useMarvelService();\n\n\n  useEffect(()=>{\n    onAddNewChars(offset,true);\n  },[])\n\n  useEffect(()=>{\n    window.addEventListener(\"scroll\", checkPageEnded);\n    window.addEventListener(\"scroll\", onUpdateCharListByScroll);\n\n    return ()=>{\n      window.removeEventListener(\"scroll\", checkPageEnded);\n      window.removeEventListener(\"scroll\", onUpdateCharListByScroll);\n    }\n  })\n\n  const checkPageEnded = () => {\n    if (\n      window.scrollY + document.documentElement.clientHeight >=\n      document.documentElement.offsetHeight - 3\n    ) {\n      setPageEnded(true)\n    }\n  };\n  \n  const onUpdateCharListByScroll = () => {\n    if (pageEnded && !newCharsLoading && !ended && !loading && !error) {\n      onAddNewChars(offset);\n      setRenderChars(true);\n    }\n  };\n\n  \n  const onAddNewChars = (offset,initial) => {\n\n    initial ? setNewCharsLoading(false) : setNewCharsLoading(true);\n    \n\n    getAllCharacters(offset)\n      .then(UpdateStateAllChars)\n      \n  };\n\n  \n\n\n  const UpdateStateAllChars = (newChars) => {\n    let endeds = newChars.length < 9 ? true : false;\n\n    setChars(chars=>[...chars, ...newChars]);\n    setOffset(offset=>offset+9);\n    setPageEnded(false);\n    setNewCharsLoading(false);\n    setEnded(ended=>endeds);\n    setRenderChars(false);\n\n  };\n\n\n\n\n  const itemRefs = [];\n\n  const setRef = (ref) => {\n      itemRefs.push(ref);\n  }\n\n  const focusOnItem = (id) => {\n      itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n      itemRefs[id].classList.add('char__item_selected');\n      itemRefs[id].focus();\n  }\n\n  const renderItems=(allChars)=> {\n    const charsList = allChars.map((item,i) => {\n      let imgClass = { objectFit: \"cover\" };\n      if (\n        item.image ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgClass = { objectFit: \"unset\" };\n      }\n      return (\n        <li\n          className=\"char__item\" \n          tabIndex={0}\n          ref={setRef}\n          key={item.id}\n          onClick={(e) => {\n            UpdateStateOfApp(item.id);\n            focusOnItem(i)\n            \n          }}\n\n          onKeyDown={(e) => {\n            if (e.key === ' ' || e.key === \"Enter\") {\n              UpdateStateOfApp(item.id);\n              focusOnItem(i);\n            }\n          }}\n        >\n          <img src={item.image} alt=\"abyss\" style={imgClass} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n    \n\n    return <ul className=\"char__grid\">{charsList}</ul>;\n  }\n\n  const items = renderItems(chars);\n  const view = !error ? items : null ;\n  const load = loading && !newCharsLoading ? <Spinner /> : null;\n  const erroR = error ? <ErrorMessage /> : null;\n  const some=renderChars ? <Spinner/> :null;\n  return (\n    <div className=\"char__list\">\n      {load}\n      {erroR}\n      {view}\n      \n      <div className=\"char__loading\">\n          {some}\n      \n      </div>\n    </div>\n  );\n  \n}\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState,useEffect } from \"react\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport useMarvelService from \"../service/MarvelService\";\n\nimport \"./charInfo.scss\";\n\nconst CharInfo=({charId})=> {\n\n  const [char,setChar] = useState(null);\n\n  const {loading , error,getCharracterId,clearError}=useMarvelService();\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const UpdateChar = () => {\n    if (!charId) {\n      return;\n    }\n\n    clearError(); \n\n    getCharracterId(charId)\n      .then(onCharLoaded)\n  };\n\n\n\n  useEffect(()=>{\n\n    UpdateChar();\n  },[charId]);\n \n\n  const skeleton = char || error || loading ? null : <Skeleton />;\n  const spinner = loading ? <Spinner /> : null;\n  const errorM = error ? <ErrorMessage /> : null;\n  const view = char && !loading && !error ? <View char={char} /> : null;\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {spinner}\n      {errorM}\n      {view}\n    </div>\n  );\n  \n}\n\n\nconst View = ({ char }) => {\n  const { name, image, homepage, wiki, comics, description } = char;\n  let showComics = \"sorry there areno comics available\";\n  if (comics.length) {\n    showComics = comics.slice(0, 10).map((item, i) => {\n      return (\n        <li className=\"char__comics-item\" key={i}>\n          {item.name}\n        </li>\n      );\n    });\n  }\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={image} alt={name} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{ description.length>210 ? `${description.slice(0,210)}...` : description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">{showComics}</ul>\n    </>\n  );\n};\nexport default CharInfo;\n","import { Component } from \"react\";\r\nimport ErorMessage from \"../errorMessage/ErrorMessage\";\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false\r\n  };\r\n  componentDidCatch(error, info) {\r\n    console.log(error, info);\r\n    this.setState({ error: true });\r\n  }\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErorMessage />;\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {useState} from 'react';\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport { Formik ,Form,Field,ErrorMessage as FormikErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport useMarvelService from '../service/MarvelService';\r\n\r\nimport './CharSearch.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst CharSearch=()=>{\r\n    const [data,setData]= useState(null);\r\n    const[loading,setLoading]= useState(false);\r\n    const [updated,setUpdated] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const {getCharByName} = useMarvelService();\r\n\r\n    const onCharExist= async(name)=>{\r\n            setLoading(true);\r\n            if(name!==''){\r\n                const data=  await getCharByName(name); \r\n                setLoading(false);\r\n                setError(false)\r\n                setData(data);\r\n                setUpdated(true)\r\n            }else{\r\n                setLoading(false);\r\n                setError(true);\r\n            }\r\n        \r\n    }\r\n\r\n    const view= updated && !error && !loading ? \r\n        (data ? \r\n            <div className='search__error_grid'>\r\n                <div className='search__title search__title_error'>\r\n                    There is! Visit {data.name} page?\r\n                    \r\n                </div>\r\n                <Link \r\n                    to={`/${data.name}`}\r\n                    className=\"button button__secondary search__bar_button search__bar_button_secondary\"\r\n                 >\r\n                    <div className=\"inner\">To Page</div>\r\n                </Link>\r\n                \r\n            </div>\r\n            \r\n             : <div className='search__title search__title_error'>The character was not found. Check the name and try again</div>)\r\n        : null;  \r\n    \r\n    const spinner= loading && !error ? <Spinner/> : null;\r\n\r\n    return(\r\n        <div className=\"search\">\r\n            <div className=\"search__title\">\r\n                Or find a character by name:\r\n            </div>\r\n            <Formik\r\n            initialValues={{\r\n                name: ''\r\n            }}\r\n            validationSchema={Yup.object({\r\n                name : Yup.string()\r\n                        \r\n            })}\r\n            onSubmit={values => onCharExist(JSON.parse(JSON.stringify(values, null, 2)).name)}>\r\n\r\n                <Form >\r\n                    <Field\r\n                        id=\"name\"\r\n                        name='name'\r\n                        type=\"text\"\r\n                        placeholder='Enter name'\r\n                        className=\"search__bar\" />\r\n                    <button type=\"submit\" className=\"button button__main search__bar_button\">\r\n                        <div className=\"inner\">Find</div>\r\n                    </button>\r\n                    <div className='search_spinner'>\r\n                        {spinner}\r\n                    </div>\r\n                    \r\n                    {view}\r\n                    <FormikErrorMessage component='div' className=\"search__title search__title_error\" name='name'/>\r\n                \r\n                </Form>\r\n            </Formik>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharSearch;","import { Helmet } from \"react-helmet\";\r\nimport { useState } from \"react\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from \"../../resources/img/vision.png\";\r\nimport CharSearch from \"../charSearch/CharSearch\";\r\n\r\nconst MainPage = ()=>{\r\n    const [charId,UpdateState]=useState(null);\r\n    return(\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Marvel information portal\"\r\n                />\r\n                <title>Marvel information portal</title>\r\n            </Helmet>\r\n            <ErrorBoundary>\r\n                <RandomChar />\r\n            </ErrorBoundary>\r\n\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                <CharList UpdateStateOfApp={UpdateState} />\r\n                </ErrorBoundary>\r\n                <div>\r\n                    <ErrorBoundary>\r\n                         <CharInfo charId={charId} />\r\n                    </ErrorBoundary>\r\n                    <ErrorBoundary>\r\n                        <CharSearch/>\r\n                    </ErrorBoundary>\r\n                </div>\r\n                \r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import {useState,useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport useMarvelService from \"../service/MarvelService\";\r\nimport \"./ComicsList.scss\";\r\n\r\n\r\nconst ComicsList =()=>{\r\n\r\n    const [chars,setChars] = useState([])\r\n    const [offset,setOffset] =useState(210);\r\n    const [newCharsLoading,setNewCharsLoading] = useState(false);\r\n    const [pageEnded,setPageEnded] = useState(false);\r\n\r\n\r\n    const {loading,error,getAllComics} = useMarvelService();\r\n    \r\n    useEffect(()=>{\r\n        onComicsUpdate(offset,true);\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\", checkPageEnded);\r\n        window.addEventListener(\"scroll\", onUpdateCharListByScroll);\r\n    \r\n        return ()=>{\r\n          window.removeEventListener(\"scroll\", checkPageEnded);\r\n          window.removeEventListener(\"scroll\", onUpdateCharListByScroll);\r\n        }\r\n    })\r\n    \r\n      const checkPageEnded = () => {\r\n        if (\r\n            window.scrollY + document.documentElement.clientHeight >=\r\n            document.documentElement.offsetHeight - 3\r\n        ) {\r\n            setPageEnded(true)\r\n        }\r\n      };\r\n      \r\n      const onUpdateCharListByScroll = () => {\r\n        if (pageEnded && !newCharsLoading && !loading && !error) {\r\n            onComicsUpdate(offset);\r\n        }\r\n      };\r\n\r\n    const onComicsUpdate=(offset,initial=false)=>{\r\n        initial ? setNewCharsLoading(false) : setNewCharsLoading(true);\r\n        getAllComics(offset)\r\n            .then(data=>onUpdateState(data))\r\n    }\r\n \r\n    const onUpdateState=(data)=>{\r\n        setChars(chars=>[...chars,...data])\r\n        setOffset(offset=>offset+8)\r\n        setPageEnded(false)\r\n        setNewCharsLoading(false)\r\n    }\r\n\r\n    const onRenderItems=(items)=>{\r\n        const allchars= items.map((item,i)=>{\r\n            const {image,title,price,id}=item;\r\n            return (\r\n                    \r\n                <Link \r\n                    to={`/comics/${id}`}\r\n                    tabIndex={0}\r\n                    className=\"comics_item\"\r\n                    key={i}\r\n                >\r\n                    <div className=\"comics_item_image\"><img src={image} alt=\"\" /></div>\r\n                    <div className=\"comics_item_title\">{title}</div>\r\n                    <div className=\"comics_item_price\">{price}$</div>\r\n                </Link>\r\n                    \r\n            )\r\n        })\r\n\r\n        return allchars;\r\n    }\r\n\r\n\r\n    \r\n\r\n    const spinner= loading && !error && !newCharsLoading? <Spinner/> : null;\r\n    const errorM=error? <ErrorMessage/>:null;\r\n    const some=onRenderItems(chars);\r\n\r\n    return(\r\n        <div className=\"comics\">\r\n            {spinner}\r\n            {errorM}\r\n            <ul className=\"comics_grid\">\r\n                {some}\r\n            </ul>\r\n           \r\n            <button className='button button__long'>\r\n                    {newCharsLoading ? <Spinner/> : null}\r\n            </button>\r\n            \r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\n\r\nexport default ComicsList;","import { Helmet } from 'react-helmet';\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage=()=>{\r\n    return(\r\n        <>\r\n        <Helmet>\r\n            <meta\r\n                name=\"description\"\r\n                content=\"The page with the list of comics\"\r\n            />\r\n            <title>Comics page</title>\r\n        </Helmet>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ComicsPage;","import ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Page404=()=>{\r\n    return(\r\n        <>\r\n            <ErrorMessage/>\r\n            <p style={{'margin-top': '40px','font-weight':'bold' , 'font-size' : '28px' , 'line-height': '37px'}}>This page doesn't exist. \r\n                <Link to='/'> <span style={{'text-decoration':'underline'}}>Back to the main page</span> </Link>\r\n            </p>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Page404;","import { Helmet } from \"react-helmet\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState,useEffect } from \"react\";\r\nimport useMarvelService from \"../service/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport './singleCharPage.scss';\r\n\r\nconst SingleCharPage=({param})=>{\r\n    const [data,setData]= useState({});\r\n    const {loading,error,getCharByName,getComicId} = useMarvelService();\r\n    const Name= useParams().name;\r\n    const comicId=useParams().comicId;\r\n    \r\n    useEffect (()=> {\r\n        onCharUpdate();\r\n    },[])\r\n\r\n    const onCharUpdate= async()=>{\r\n        if(param==='name'){\r\n            const chars = await getCharByName(Name);\r\n            setData(chars)\r\n        }else if (param==='comicId'){\r\n            console.log(comicId)\r\n            const comics = await getComicId(comicId);\r\n            \r\n            setData(comics)\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    const spinner= loading && !error? <Spinner/> : null;\r\n    const errorM=error ? <ErrorMessage/> : null;\r\n    const viewChar= data && !loading && !error && Name ? <ViewChar data={data}/> :null;\r\n    const viewComic= data && !loading && !error && comicId ? <ViewComic data={data}/> :null;\r\n    return (\r\n        <>\r\n            {spinner}\r\n            {errorM}\r\n            {viewChar}\r\n            {viewComic}\r\n        </>\r\n    )\r\n}\r\n\r\nconst ViewChar=({data})=>{\r\n    const {title,image,description}= data;\r\n    return(\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={title}\r\n                />\r\n                <title>Marvel information portal</title>\r\n            </Helmet>\r\n            <div className=\"single-comic\">\r\n                <img src={image} alt={title} className=\"single-comic__img single-comic__img_char \"/>\r\n                <div className=\"single-comic__info\">\r\n                    <h2 className=\"single-comic__name\">{title}</h2>\r\n                    <p className=\"single-comic__descr\">{description}</p>\r\n                    \r\n                </div>\r\n                {/* <a href=\"#\" className=\"single-comic__back\">Back to all</a> */}\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst ViewComic=({data})=>{\r\n    const {title,image,price}= data;\r\n    return(\r\n        <div className=\"single-comic\">\r\n            <img src={image} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">Re-live the legendary first journey into the dystopian future of 2013 - where Sentinels stalk the Earth, and the X-Men are humanity's only hope...until they die! Also featuring the first appearance of Alpha Flight, the return of the Wendigo, the history of the X-Men from Cyclops himself...and a demon for Christmas!?</p>\r\n                <p className=\"single-comic__descr\">144 pages</p>\r\n                <p className=\"single-comic__descr\">Language: en-us</p>\r\n                <div className=\"single-comic__price\">{price}$</div>\r\n            </div>\r\n            {/* <a href=\"#\" className=\"single-comic__back\">Back to all</a> */}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SingleCharPage;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport SingleCharPage from \"../singleCharPage/SingleCharPage\";\r\n\r\nconst SingleItemPage=({param})=>{\r\n    return (\r\n        <>\r\n\r\n            <AppBanner/>\r\n            <SingleCharPage param={param}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingleItemPage;\r\n","\nimport { BrowserRouter as Router,Route,Routes } from 'react-router-dom';\nimport AppHeader from \"../appHeader/AppHeader\";\nimport MainPage from '../pages/MainPage';\nimport ComicsPage from '../pages/ComicsPage';\nimport Page404 from '../pages/Page404';\nimport SingleItemPage from '../pages/SingleItemPage';\n\nconst App=()=> {\n  return (\n    <div className=\"app\">\n      <Router>\n          <AppHeader />\n          <main>\n              <Routes>\n                <Route path='/' element={<MainPage/>}/>\n                <Route path='/comics' element={<ComicsPage/>}/>\n                <Route path='/comics/:comicId' element={<SingleItemPage param='comicId'/>}/>\n                <Route path='/:name' element={<SingleItemPage param='name'/>}/>\n                <Route exact path='*' element={<Page404 />}/>\n             </Routes>\n          </main>\n\n      </Router>\n      \n    </div>\n  );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}